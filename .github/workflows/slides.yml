name: Slides

on:
  push:
    branches:
      - master
      - main
      - publish_pdfs
  pull_request:
    branches:
      - master
      - main

jobs:
  slides:
    name: slides
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: seanmiddleditch/gha-setup-ninja@v3

      - name: Install dependencies
        shell: bash
        run: |
          sudo apt update
          sudo apt install chromium-browser
          wget https://github.com/marp-team/marp-cli/releases/download/v3.2.1/marp-cli-v3.2.1-linux.tar.gz
          tar -xf ./marp-cli-v3.2.1-linux.tar.gz
          sudo ln -s $(pwd)/marp /usr/bin/marp

      - name: Create Build Environment
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure CMake
        shell: bash
        working-directory: ${{runner.workspace}}/build
        run: |
          cmake -S $GITHUB_WORKSPACE -B . -DCMAKE_BUILD_TYPE=Debug

      - name: Build
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: cmake --build . --config Debug

      - name: Copy slides
        working-directory: ${{runner.workspace}}/build
        shell: bash
        run: |
          mkdir slides
          # For the moment we just PDF slides, because HTML have problem with images urls
          cp ./*.pdf ./slides/

      - name: Generate GitHub Pages index
        if: github.ref_name == 'publish_pdfs'
        working-directory: ${{runner.workspace}}/build/slides/
        shell: bash
        run: |
          find . -name "*.pdf" -exec echo "<a href='{}'>{}</a>" \; > index.html

      - name: Publish artifact with slides to GitHub Pages
        if: github.ref_name == 'publish_pdfs'
        uses: actions/upload-pages-artifact@v2
        with:
          path: "${{runner.workspace}}/build/slides/"

  # Deploy job
  deploy:
    needs: slides

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2 # or the latest "vX.X.X" version tag for this action 
        with:
          artifact_name: 'github-pages'
